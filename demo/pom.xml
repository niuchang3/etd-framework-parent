<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>etd-framework-parent</artifactId>
        <groupId>org.etd.framework</groupId>
        <version>0.0.1-RELEASES</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.etd.framework</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-RELEASES</version>


    <dependencies>
        <dependency>
            <groupId>org.etd.framework</groupId>
            <artifactId>etd-framework-starter-web</artifactId>
            <version>0.0.1-RELEASES</version>
        </dependency>

        <dependency>
            <groupId>org.etd.framework</groupId>
            <artifactId>etd-framework-common-core</artifactId>
            <version>0.0.1-RELEASES</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.etd.framework</groupId>
            <artifactId>etd-framework-starter-message</artifactId>
            <version>0.0.1-RELEASES</version>
        </dependency>

        <dependency>
            <groupId>org.etd.framework</groupId>
            <artifactId>etd-framework-starter-cache</artifactId>
            <version>0.0.1-RELEASES</version>
        </dependency>

        <dependency>
            <groupId>org.etd.framework</groupId>
            <artifactId>etd-framework-starter-security</artifactId>
            <version>0.0.1-RELEASES</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.6.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <!--镜像名称-->
                    <imageName>${project.artifactId}:${project.version}</imageName>
                    <!--指定标签-->
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!--基础镜像jdk1.8-->
                    <baseImage>java</baseImage>
                    <!--制作者提供本人信息-->
                    <maintainer>niuchang</maintainer>
                    <!--切换到Root目录-->
                    <workdir>/opt/java</workdir>
                    <cmd>["java", "-version"]</cmd>
                    <entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>

                    <!--指定DockerFile路径-->
<!--                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->

                    <!--指定远程docker api地址-->
                    <dockerHost>http://172.16.7.200:2375</dockerHost>

                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <resources>
                        <resource>
                            <targetPath>/opt/java</targetPath>
                            <!--用于指定需要复制的根目录-->
                            <directory>${project.build.directory}</directory>
                            <!--用于指定需要复制的jar文件-->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>